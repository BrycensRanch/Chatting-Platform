name: CI-backend

on:
  push:
    branches:
      - "*"
    # Only consider those paths to trigger the action
    paths:
      - 'backend/**'
      - '.github/**'

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    # Only consider those paths to trigger the action
    paths:
      - 'backend/**'
      - '.github/**'

jobs:
  build-and-test-backend:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: ðŸ›‘ Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        
      - uses: actions/checkout@v3

      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: ðŸ“¥ Monorepo install all deps & pnpm
        uses: ./.github/actions/pnpm-install

      # see https://github.com/vercel/next.js/pull/27362
      - name: Restore backend build from cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/backend/dist
            ~/.cache
            ${{ github.workspace }}/.cache
            ${{ github.workspace }}/**/tsconfig.tsbuildinfo
          key: ${{ runner.os }}-backend-${{ hashFiles('**/pnpm.lock') }}-${{ hashFiles('backend/src/**.[jt]s?', 'backend/src/**.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-${{ hashFiles('**/pnpm.lock') }}-

      # - name: Create and seed test database
      #   working-directory: backend
      #   run: |
      #     pnpm exec prisma db push
      #     pnpm exec prisma db seed
      #   env:
      #     PRISMA_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/chat-backend?schema=public

      - name: Build Backend
        working-directory: backend
        run: |
          pnpm build
        env:
          # PRISMA_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/chat-frontend?schema=public
          NEXTJS_SENTRY_UPLOAD_DRY_RUN: true
          NODE_ENV: production
          REDIS_PASSWORD: ${{ vars.GITHUB_SHA }}
          DB_PASSWORD: ${{ vars.GITHUB_SHA }} # totally secure
          REDIS_URL: "redis://:${REDIS_PASSWORD}@host.docker.internal:6379"

      # - name: Install Codecov Uploader
      #   working-directory: backend
      #   run: |
      #     curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import # One-time step that we do everytime

      #     curl -Os https://uploader.codecov.io/latest/linux/codecov

      #     curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM

      #     curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig

      #     gpgv codecov.SHA256SUM.sig codecov.SHA256SUM

      #     shasum -a 256 -c codecov.SHA256SUM

      #     chmod +x codecov

      - name: ðŸ”¢ Run Unit Tests
        working-directory: backend
        continue-on-error: true
        
        run: |
          pnpm test
        env: 
           COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
           NEXTJS_SENTRY_UPLOAD_DRY_RUN: true
      # - uses: codecov/codecov-action@v3
      #   with:
      #     flags: unittests-backend # optional
      #     name: codecov-backend # optional
      #     fail_ci_if_error: true # optional (default = false)
      #     verbose: false # optional (default = false)
      #     working-directory: backend
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} 
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: build
          path: ./backend/dist
      # - name: ðŸ§ª Run Cypress Tests
      #   uses: cypress-io/github-action@v5
      # - name: Coveralls
      #   uses: coverallsapp/github-action@master
      #   with:
      #     github-token: ${{ secrets.GITHUB_TOKEN }}